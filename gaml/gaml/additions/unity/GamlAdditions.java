package gaml.additions.unity;

import msi.gama.util.matrix.*;
import msi.gama.util.graph.*;
import msi.gama.metamodel.shape.*;
import java.lang.*;
import msi.gama.util.*;
import msi.gama.util.path.*;
import msi.gama.extensions.messaging.*;
import msi.gaml.compilation.*;
import msi.gama.util.file.*;
import msi.gaml.architecture.finite_state_machine.*;
import msi.gama.common.interfaces.*;
import msi.gaml.architecture.user.*;
import msi.gama.kernel.simulation.*;
import msi.gama.outputs.*;
import msi.gaml.species.*;
import msi.gaml.architecture.weighted_tasks.*;
import msi.gama.kernel.experiment.*;
import  msi.gama.metamodel.shape.*;
import msi.gaml.extensions.multi_criteria.*;
import msi.gaml.types.*;
import msi.gama.kernel.batch.*;
import msi.gama.kernel.root.*;
import java.util.*;
import msi.gaml.factories.*;
import msi.gaml.skills.*;
import msi.gama.util.tree.*;
import msi.gama.outputs.layers.*;
import msi.gama.runtime.*;
import msi.gaml.statements.test.*;
import msi.gama.metamodel.agent.*;
import msi.gaml.expressions.*;
import msi.gama.metamodel.topology.*;
import msi.gaml.statements.draw.*;
import msi.gaml.descriptions.*;
import msi.gaml.variables.*;
import msi.gaml.operators.*;
import msi.gama.runtime.exceptions.*;
import msi.gaml.statements.*;
import msi.gama.kernel.model.*;
import msi.gama.metamodel.population.*;
import msi.gama.outputs.layers.charts.*;
import msi.gaml.architecture.reflex.*;
import msi.gaml.operators.Random;
import msi.gaml.operators.Maths;
import msi.gaml.operators.Points;
import msi.gaml.operators.Spatial.Properties;
import msi.gaml.operators.System;
import static msi.gaml.operators.Cast.*;
import static msi.gaml.operators.Spatial.*;
import static msi.gama.common.interfaces.IKeyword.*;
@SuppressWarnings({ "rawtypes", "unchecked", "unused" })

public class GamlAdditions extends msi.gaml.compilation.AbstractGamlAdditions {
	public void initialize() throws SecurityException, NoSuchMethodException {
	initializeSpecies();
	initializeVars();
	initializeAction();
	initializeExperiment();
}public void initializeSpecies()  {
_species("abstract_unity_linker",gaml.extension.unity.species.AbstractUnityLinker.class,(p, i)->new gaml.extension.unity.species.AbstractUnityLinker(p, i),S("network"));
_species("abstract_unity_player",gaml.extension.unity.species.AbstractUnityPlayer.class,(p, i)->new gaml.extension.unity.species.AbstractUnityPlayer(p, i),AS);
}public void initializeVars()  {
_var(gaml.extension.unity.species.AbstractUnityLinker.class,desc(3,S("type","3","name","connect_to_unity","init",TRUE)),(s,a,t,v)->t==null? false:((gaml.extension.unity.species.AbstractUnityLinker)t).getConnectToUnity(a),null,(s,a,t,v)->{if (t != null) ((gaml.extension.unity.species.AbstractUnityLinker) t).setConnectToUnity(a, (Boolean) v); return null; });
_var(gaml.extension.unity.species.AbstractUnityLinker.class,desc(0,S("type","0","name","client")),(s,a,t,v)->t==null? null:((gaml.extension.unity.species.AbstractUnityLinker)t).getClient(a),null,(s,a,t,v)->{if (t != null) ((gaml.extension.unity.species.AbstractUnityLinker) t).setClient(a, (Object) v); return null; });
_var(gaml.extension.unity.species.AbstractUnityLinker.class,desc(1,S("type","1","name","min_num_players","init","0")),(s,a,t,v)->t==null? 0:((gaml.extension.unity.species.AbstractUnityLinker)t).getMinPlayer(a),null,(s,a,t,v)->{if (t != null) ((gaml.extension.unity.species.AbstractUnityLinker) t).setMinPlayer(a, (Integer) v); return null; });
_var(gaml.extension.unity.species.AbstractUnityLinker.class,desc(1,S("type","1","name","max_num_players","init","1")),(s,a,t,v)->t==null? 0:((gaml.extension.unity.species.AbstractUnityLinker)t).getMaxPlayer(a),null,(s,a,t,v)->{if (t != null) ((gaml.extension.unity.species.AbstractUnityLinker) t).setMaxPlayer(a, (Integer) v); return null; });
_var(gaml.extension.unity.species.AbstractUnityLinker.class,desc(1,S("type","1","name","port","init","6870")),(s,a,t,v)->t==null? 0:((gaml.extension.unity.species.AbstractUnityLinker)t).getPort(a),null,(s,a,t,v)->{if (t != null) ((gaml.extension.unity.species.AbstractUnityLinker) t).setPort(a, (Integer) v); return null; });
_var(gaml.extension.unity.species.AbstractUnityLinker.class,desc(4,S("type","4","name","end_message_symbol","init","'&&&'")),(s,a,t,v)->t==null? null:((gaml.extension.unity.species.AbstractUnityLinker)t).getEndMessageSymbol(a),null,(s,a,t,v)->{if (t != null) ((gaml.extension.unity.species.AbstractUnityLinker) t).setEndMessageSymbol(a, (String) v); return null; });
_var(gaml.extension.unity.species.AbstractUnityLinker.class,desc(1,S("type","1","name","precision","init","10000")),(s,a,t,v)->t==null? 0:((gaml.extension.unity.species.AbstractUnityLinker)t).getPrecision(a),null,(s,a,t,v)->{if (t != null) ((gaml.extension.unity.species.AbstractUnityLinker) t).setPrecision(a, (Integer) v); return null; });
_var(gaml.extension.unity.species.AbstractUnityLinker.class,desc(2,S("type","2","name","delay_after_mes","init","0.0")),(s,a,t,v)->t==null? 0d:((gaml.extension.unity.species.AbstractUnityLinker)t).getDelayAfterMes(a),null,(s,a,t,v)->{if (t != null) ((gaml.extension.unity.species.AbstractUnityLinker) t).setDelayAfterMes(a, (Double) v); return null; });
_var(gaml.extension.unity.species.AbstractUnityLinker.class,desc(4,S("type","4","name","ready")),(s,a,t,v)->t==null? null:((gaml.extension.unity.species.AbstractUnityLinker)t).getWaitingMessage(a),null,(s,a,t,v)->{if (t != null) ((gaml.extension.unity.species.AbstractUnityLinker) t).setWaitingMessage(a, (String) v); return null; });
_var(gaml.extension.unity.species.AbstractUnityLinker.class,desc(5,S("type","5","name","agents_to_send","of","11")),(s,a,t,v)->t==null? null:((gaml.extension.unity.species.AbstractUnityLinker)t).getAgentsToSend(a),null,(s,a,t,v)->{if (t != null) ((gaml.extension.unity.species.AbstractUnityLinker) t).setAgentsToSend(a, (IList) v); return null; });
_var(gaml.extension.unity.species.AbstractUnityLinker.class,desc(5,S("type","5","name","background_geoms","of","13")),(s,a,t,v)->t==null? null:((gaml.extension.unity.species.AbstractUnityLinker)t).getBackgroundGeoms(a),null,(s,a,t,v)->{if (t != null) ((gaml.extension.unity.species.AbstractUnityLinker) t).setBackgroundGeoms(a, (IList) v); return null; });
_var(gaml.extension.unity.species.AbstractUnityLinker.class,desc(5,S("type","5","name","background_geoms_heights","of","1")),(s,a,t,v)->t==null? null:((gaml.extension.unity.species.AbstractUnityLinker)t).getBackgroundGeomsHeights(a),null,(s,a,t,v)->{if (t != null) ((gaml.extension.unity.species.AbstractUnityLinker) t).setBackgroundGeomsHeights(a, (IList) v); return null; });
_var(gaml.extension.unity.species.AbstractUnityLinker.class,desc(5,S("type","5","name","background_geoms_colliders","of","3")),(s,a,t,v)->t==null? null:((gaml.extension.unity.species.AbstractUnityLinker)t).getBackgroundGeomsColliders(a),null,(s,a,t,v)->{if (t != null) ((gaml.extension.unity.species.AbstractUnityLinker) t).setBackgroundGeomsColliders(a, (IList) v); return null; });
_var(gaml.extension.unity.species.AbstractUnityLinker.class,desc(5,S("type","5","name","background_geoms_names","of","4")),(s,a,t,v)->t==null? null:((gaml.extension.unity.species.AbstractUnityLinker)t).getBackgroundGeomsNames(a),null,(s,a,t,v)->{if (t != null) ((gaml.extension.unity.species.AbstractUnityLinker) t).setBackgroundGeomsNames(a, (IList) v); return null; });
_var(gaml.extension.unity.species.AbstractUnityLinker.class,desc(5,S("type","5","name","background_geoms_tags","of","4")),(s,a,t,v)->t==null? null:((gaml.extension.unity.species.AbstractUnityLinker)t).getBackgroundGeomsTags(a),null,(s,a,t,v)->{if (t != null) ((gaml.extension.unity.species.AbstractUnityLinker) t).setBackgroundGeomsTags(a, (IList) v); return null; });
_var(gaml.extension.unity.species.AbstractUnityLinker.class,desc(3,S("type","3","name","do_send_world","init",TRUE)),(s,a,t,v)->t==null? false:((gaml.extension.unity.species.AbstractUnityLinker)t).getDoSendWorld(a),null,(s,a,t,v)->{if (t != null) ((gaml.extension.unity.species.AbstractUnityLinker) t).setDoSendWorld(a, (Boolean) v); return null; });
_var(gaml.extension.unity.species.AbstractUnityLinker.class,desc(3,S("type","3","name","initialized","init",FALSE)),(s,a,t,v)->t==null? false:((gaml.extension.unity.species.AbstractUnityLinker)t).getInitialized(a),null,(s,a,t,v)->{if (t != null) ((gaml.extension.unity.species.AbstractUnityLinker) t).setInitialized(a, (Boolean) v); return null; });
_var(gaml.extension.unity.species.AbstractUnityLinker.class,desc(4,S("type","4","name","player_species")),(s,a,t,v)->t==null? null:((gaml.extension.unity.species.AbstractUnityLinker)t).getPlayerSpecies(a),null,(s,a,t,v)->{if (t != null) ((gaml.extension.unity.species.AbstractUnityLinker) t).setPlayerSpecies(a, (String) v); return null; });
_var(gaml.extension.unity.species.AbstractUnityLinker.class,desc(3,S("type","3","name","receive_information","init",FALSE)),(s,a,t,v)->t==null? false:((gaml.extension.unity.species.AbstractUnityLinker)t).getReceiveInformation(a),null,(s,a,t,v)->{if (t != null) ((gaml.extension.unity.species.AbstractUnityLinker) t).setReceiveInformation(a, (Boolean) v); return null; });
_var(gaml.extension.unity.species.AbstractUnityLinker.class,desc(3,S("type","3","name","move_player_event","init",FALSE)),(s,a,t,v)->t==null? false:((gaml.extension.unity.species.AbstractUnityLinker)t).getMovePlayerEvent(a),null,(s,a,t,v)->{if (t != null) ((gaml.extension.unity.species.AbstractUnityLinker) t).setMovePlayerEvent(a, (Boolean) v); return null; });
_var(gaml.extension.unity.species.AbstractUnityLinker.class,desc(3,S("type","3","name","move_player_from_unity","init",TRUE)),(s,a,t,v)->t==null? false:((gaml.extension.unity.species.AbstractUnityLinker)t).getMovePlayerFromUnity(a),null,(s,a,t,v)->{if (t != null) ((gaml.extension.unity.species.AbstractUnityLinker) t).setMovePlayerFromUnity(a, (Boolean) v); return null; });
_var(gaml.extension.unity.species.AbstractUnityLinker.class,desc(3,S("type","3","name","use_physics_for_player","init",TRUE)),(s,a,t,v)->t==null? false:((gaml.extension.unity.species.AbstractUnityLinker)t).getUsePhysicsForPlayer(a),null,(s,a,t,v)->{if (t != null) ((gaml.extension.unity.species.AbstractUnityLinker) t).setUsePhysicsForPlayer(a, (Boolean) v); return null; });
_var(gaml.extension.unity.species.AbstractUnityLinker.class,desc(5,S("type","5","name","new_player_position","of","1")),(s,a,t,v)->t==null? null:((gaml.extension.unity.species.AbstractUnityLinker)t).getNewPlayerPosition(a),null,(s,a,t,v)->{if (t != null) ((gaml.extension.unity.species.AbstractUnityLinker) t).setNewPlayerPosition(a, (IList) v); return null; });
_var(gaml.extension.unity.species.AbstractUnityLinker.class,desc(2,S("type","2","name","distance_player_selection","init","2.0")),(s,a,t,v)->t==null? 0d:((gaml.extension.unity.species.AbstractUnityLinker)t).getDistanceSelection(a),null,(s,a,t,v)->{if (t != null) ((gaml.extension.unity.species.AbstractUnityLinker) t).setDistanceSelection(a, (Double) v); return null; });
_var(gaml.extension.unity.species.AbstractUnityLinker.class,desc(5,S("type","5","name","init_locations","of","7")),(s,a,t,v)->t==null? null:((gaml.extension.unity.species.AbstractUnityLinker)t).getPlayerLocationInit(a),null,(s,a,t,v)->{if (t != null) ((gaml.extension.unity.species.AbstractUnityLinker) t).setPlayerLocationInit(a, (IList) v); return null; });
_var(gaml.extension.unity.species.AbstractUnityLinker.class,desc(5,S("type","5","name","player_agents","of","11")),(s,a,t,v)->t==null? null:((gaml.extension.unity.species.AbstractUnityLinker)t).getPlayers(a),null,(s,a,t,v)->{if (t != null) ((gaml.extension.unity.species.AbstractUnityLinker) t).setPlayers(a, (IList) v); return null; });
_var(gaml.extension.unity.species.AbstractUnityPlayer.class,desc(2,S("type","2","name","rotation")),(s,a,t,v)->t==null? 0d:((gaml.extension.unity.species.AbstractUnityPlayer)t).getRotation(a),null,(s,a,t,v)->{if (t != null) ((gaml.extension.unity.species.AbstractUnityPlayer) t).setRotation(a, (Double) v); return null; });
_var(gaml.extension.unity.species.AbstractUnityPlayer.class,desc(6,S("type","6","name","color")),(s,a,t,v)->t==null? null:((gaml.extension.unity.species.AbstractUnityPlayer)t).getColor(a),null,(s,a,t,v)->{if (t != null) ((gaml.extension.unity.species.AbstractUnityPlayer) t).setColor(a, (GamaColor) v); return null; });
_var(gaml.extension.unity.species.AbstractUnityPlayer.class,desc(3,S("type","3","name","to_display")),(s,a,t,v)->t==null? false:((gaml.extension.unity.species.AbstractUnityPlayer)t).getToDisplay(a),null,(s,a,t,v)->{if (t != null) ((gaml.extension.unity.species.AbstractUnityPlayer) t).setToDisplay(a, (Boolean) v); return null; });
_var(gaml.extension.unity.species.AbstractUnityPlayer.class,desc(3,S("type","3","name","selected")),(s,a,t,v)->t==null? false:((gaml.extension.unity.species.AbstractUnityPlayer)t).getSelected(a),null,(s,a,t,v)->{if (t != null) ((gaml.extension.unity.species.AbstractUnityPlayer) t).setSelected(a, (Boolean) v); return null; });
_var(gaml.extension.unity.species.AbstractUnityPlayer.class,desc(2,S("type","2","name","cone_distance")),(s,a,t,v)->t==null? 0d:((gaml.extension.unity.species.AbstractUnityPlayer)t).getConeDistance(a),null,(s,a,t,v)->{if (t != null) ((gaml.extension.unity.species.AbstractUnityPlayer) t).setConeDistance(a, (Double) v); return null; });
_var(gaml.extension.unity.species.AbstractUnityPlayer.class,desc(2,S("type","2","name","cone_amplitude")),(s,a,t,v)->t==null? 0d:((gaml.extension.unity.species.AbstractUnityPlayer)t).getConeAmplitude(a),null,(s,a,t,v)->{if (t != null) ((gaml.extension.unity.species.AbstractUnityPlayer) t).setConeAmplitude(a, (Double) v); return null; });
_var(gaml.extension.unity.species.AbstractUnityPlayer.class,desc(2,S("type","2","name","player_size","init","3.0")),(s,a,t,v)->t==null? 0d:((gaml.extension.unity.species.AbstractUnityPlayer)t).getPlayerSize(a),null,(s,a,t,v)->{if (t != null) ((gaml.extension.unity.species.AbstractUnityPlayer) t).setPlayerSize(a, (Double) v); return null; });
_var(gaml.extension.unity.species.AbstractUnityPlayer.class,desc(2,S("type","2","name","player_rotation","init","90.0")),(s,a,t,v)->t==null? 0d:((gaml.extension.unity.species.AbstractUnityPlayer)t).getPlayerRotation(a),null,(s,a,t,v)->{if (t != null) ((gaml.extension.unity.species.AbstractUnityPlayer) t).setPlayerRotation(a, (Double) v); return null; });
_var(gaml.extension.unity.species.AbstractUnityPlayer.class,desc(2,S("type","2","name","player_agents_perception_radius","init","0.0")),(s,a,t,v)->t==null? 0d:((gaml.extension.unity.species.AbstractUnityPlayer)t).getPlayerAgentPerceptionRadius(a),null,(s,a,t,v)->{if (t != null) ((gaml.extension.unity.species.AbstractUnityPlayer) t).setPlayerAgentPerceptionRadius(a, (Double) v); return null; });
_var(gaml.extension.unity.species.AbstractUnityPlayer.class,desc(2,S("type","2","name","player_agents_min_dist","init","0.0")),(s,a,t,v)->t==null? 0d:((gaml.extension.unity.species.AbstractUnityPlayer)t).getPlayerAgentMinDist(a),null,(s,a,t,v)->{if (t != null) ((gaml.extension.unity.species.AbstractUnityPlayer) t).setPlayerAgentMinDist(a, (Double) v); return null; });
_var(gaml.extension.unity.species.VRExperiment.class,desc(4,S("type","4","name","unity_linker_species")),(s,a,t,v)->t==null? null:((gaml.extension.unity.species.VRExperiment)t).getUnityLinkerSpecies(a),null,(s,a,t,v)->{if (t != null) ((gaml.extension.unity.species.VRExperiment) t).setUnityLinkerSpecies(a, (String) v); return null; });
_var(gaml.extension.unity.species.VRExperiment.class,desc(5,S("type","5","name","displays_to_hide")),(s,a,t,v)->t==null? null:((gaml.extension.unity.species.VRExperiment)t).getDisplaysToHide(a),null,(s,a,t,v)->{if (t != null) ((gaml.extension.unity.species.VRExperiment) t).setDisplaysToHide(a, (IList) v); return null; });
}public void initializeAction() throws SecurityException, NoSuchMethodException {
_action(new GamaHelper("filter_overlapping",gaml.extension.unity.species.AbstractUnityLinker.class,(s,a,t,v)->((gaml.extension.unity.species.AbstractUnityLinker) t).primFilterOverlapping(s)),desc(PRIM,new Children(_arg("ags",5,T),_arg("player",11,T)),NAME,"filter_overlapping",TYPE,Ti(LI),VIRTUAL,FALSE),gaml.extension.unity.species.AbstractUnityLinker.class.getMethod("primFilterOverlapping",SC));
_action(new GamaHelper("add_background_data",gaml.extension.unity.species.AbstractUnityLinker.class,(s,a,t,v)->{((gaml.extension.unity.species.AbstractUnityLinker) t).primAddBackgroundData(s);return null;}),desc(PRIM,new Children(_arg("geoms",5,T),_arg("names",5,T),_arg("tag",4,T),_arg("height",2,T),_arg("collider",3,T)),NAME,"add_background_data",TYPE,Ti(void.class),VIRTUAL,FALSE),gaml.extension.unity.species.AbstractUnityLinker.class.getMethod("primAddBackgroundData",SC));
_action(new GamaHelper("move_player",gaml.extension.unity.species.AbstractUnityLinker.class,(s,a,t,v)->{((gaml.extension.unity.species.AbstractUnityLinker) t).primMovePlayer(s);return null;}),desc(PRIM,new Children(_arg("player",11,T),_arg("loc",7,T)),NAME,"move_player",TYPE,Ti(void.class),VIRTUAL,FALSE),gaml.extension.unity.species.AbstractUnityLinker.class.getMethod("primMovePlayer",SC));
_action(new GamaHelper("manage_message_from_unity",gaml.extension.unity.species.AbstractUnityLinker.class,(s,a,t,v)->{((gaml.extension.unity.species.AbstractUnityLinker) t).primManageMessageFromUnity(s);return null;}),desc(PRIM,new Children(),NAME,"manage_message_from_unity",TYPE,Ti(void.class),VIRTUAL,FALSE),gaml.extension.unity.species.AbstractUnityLinker.class.getMethod("primManageMessageFromUnity",SC));
_action(new GamaHelper("message_agents",gaml.extension.unity.species.AbstractUnityLinker.class,(s,a,t,v)->((gaml.extension.unity.species.AbstractUnityLinker) t).primMessageAgents(s)),desc(PRIM,new Children(_arg("ags",5,T)),NAME,"message_agents",TYPE,Ti(LI),VIRTUAL,FALSE),gaml.extension.unity.species.AbstractUnityLinker.class.getMethod("primMessageAgents",SC));
_action(new GamaHelper("manage_new_message",gaml.extension.unity.species.AbstractUnityLinker.class,(s,a,t,v)->{((gaml.extension.unity.species.AbstractUnityLinker) t).primManageNewMessage(s);return null;}),desc(PRIM,new Children(_arg("mes",4,T)),NAME,"manage_new_message",TYPE,Ti(void.class),VIRTUAL,FALSE),gaml.extension.unity.species.AbstractUnityLinker.class.getMethod("primManageNewMessage",SC));
_action(new GamaHelper("wait_for_message",gaml.extension.unity.species.AbstractUnityLinker.class,(s,a,t,v)->{((gaml.extension.unity.species.AbstractUnityLinker) t).primWaitForMessage(s);return null;}),desc(PRIM,new Children(_arg("mes",4,T)),NAME,"wait_for_message",TYPE,Ti(void.class),VIRTUAL,FALSE),gaml.extension.unity.species.AbstractUnityLinker.class.getMethod("primWaitForMessage",SC));
_action(new GamaHelper("send_parameters",gaml.extension.unity.species.AbstractUnityLinker.class,(s,a,t,v)->{((gaml.extension.unity.species.AbstractUnityLinker) t).primSendParameters(s);return null;}),desc(PRIM,new Children(_arg("player",0,T)),NAME,"send_parameters",TYPE,Ti(void.class),VIRTUAL,FALSE),gaml.extension.unity.species.AbstractUnityLinker.class.getMethod("primSendParameters",SC));
_action(new GamaHelper("send_message",gaml.extension.unity.species.AbstractUnityLinker.class,(s,a,t,v)->{((gaml.extension.unity.species.AbstractUnityLinker) t).primSentMessage(s);return null;}),desc(PRIM,new Children(_arg("mes",4,T)),NAME,"send_message",TYPE,Ti(void.class),VIRTUAL,FALSE),gaml.extension.unity.species.AbstractUnityLinker.class.getMethod("primSentMessage",SC));
_action(new GamaHelper("filter_distance",gaml.extension.unity.species.AbstractUnityLinker.class,(s,a,t,v)->((gaml.extension.unity.species.AbstractUnityLinker) t).primFilterDistance(s)),desc(PRIM,new Children(_arg("ags",5,T),_arg("player",11,T)),NAME,"filter_distance",TYPE,Ti(LI),VIRTUAL,FALSE),gaml.extension.unity.species.AbstractUnityLinker.class.getMethod("primFilterDistance",SC));
_action(new GamaHelper("after_sending_world",gaml.extension.unity.species.AbstractUnityLinker.class,(s,a,t,v)->{((gaml.extension.unity.species.AbstractUnityLinker) t).primAfterSendingWorld(s);return null;}),desc(PRIM,new Children(_arg("players",5,T)),NAME,"after_sending_world",TYPE,Ti(void.class),VIRTUAL,FALSE),gaml.extension.unity.species.AbstractUnityLinker.class.getMethod("primAfterSendingWorld",SC));
_action(new GamaHelper("send_player_position",gaml.extension.unity.species.AbstractUnityLinker.class,(s,a,t,v)->{((gaml.extension.unity.species.AbstractUnityLinker) t).primSendPlayerPosition(s);return null;}),desc(PRIM,new Children(_arg("player",11,T)),NAME,"send_player_position",TYPE,Ti(void.class),VIRTUAL,FALSE),gaml.extension.unity.species.AbstractUnityLinker.class.getMethod("primSendPlayerPosition",SC));
_action(new GamaHelper("send_geometries",gaml.extension.unity.species.AbstractUnityLinker.class,(s,a,t,v)->{((gaml.extension.unity.species.AbstractUnityLinker) t).primSentGeometries(s);return null;}),desc(PRIM,new Children(_arg("geoms",5,T),_arg("heights",5,T),_arg("players",5,T),_arg("geometry_colliders",5,T),_arg("names",5,T)),NAME,"send_geometries",TYPE,Ti(void.class),VIRTUAL,FALSE),gaml.extension.unity.species.AbstractUnityLinker.class.getMethod("primSentGeometries",SC));
_action(new GamaHelper("new_player_location",gaml.extension.unity.species.AbstractUnityLinker.class,(s,a,t,v)->((gaml.extension.unity.species.AbstractUnityLinker) t).primNewPlayerLoc(s)),desc(PRIM,new Children(_arg("loc",7,T),_arg("player",11,T)),NAME,"new_player_location",TYPE,Ti(P),VIRTUAL,FALSE),gaml.extension.unity.species.AbstractUnityLinker.class.getMethod("primNewPlayerLoc",SC));
_action(new GamaHelper("send_init_data",gaml.extension.unity.species.AbstractUnityLinker.class,(s,a,t,v)->{((gaml.extension.unity.species.AbstractUnityLinker) t).primSentInitData(s);return null;}),desc(PRIM,new Children(_arg("player",11,T)),NAME,"send_init_data",TYPE,Ti(void.class),VIRTUAL,FALSE),gaml.extension.unity.species.AbstractUnityLinker.class.getMethod("primSentInitData",SC));
_action(new GamaHelper("add_to_map",gaml.extension.unity.species.AbstractUnityLinker.class,(s,a,t,v)->{((gaml.extension.unity.species.AbstractUnityLinker) t).primAddToMap(s);return null;}),desc(PRIM,new Children(_arg("map",10,T),_arg("ag",11,T)),NAME,"add_to_map",TYPE,Ti(void.class),VIRTUAL,FALSE),gaml.extension.unity.species.AbstractUnityLinker.class.getMethod("primAddToMap",SC));
_action(new GamaHelper("init_species_to_send",gaml.extension.unity.species.AbstractUnityLinker.class,(s,a,t,v)->{((gaml.extension.unity.species.AbstractUnityLinker) t).primInitSpecies(s);return null;}),desc(PRIM,new Children(_arg("species_list",5,T)),NAME,"init_species_to_send",TYPE,Ti(void.class),VIRTUAL,FALSE),gaml.extension.unity.species.AbstractUnityLinker.class.getMethod("primInitSpecies",SC));
_action(new GamaHelper("after_sending_geometries",gaml.extension.unity.species.AbstractUnityLinker.class,(s,a,t,v)->{((gaml.extension.unity.species.AbstractUnityLinker) t).primAfterSendingGeometries(s);return null;}),desc(PRIM,new Children(),NAME,"after_sending_geometries",TYPE,Ti(void.class),VIRTUAL,FALSE),gaml.extension.unity.species.AbstractUnityLinker.class.getMethod("primAfterSendingGeometries",SC));
_action(new GamaHelper("loc_to_send",gaml.extension.unity.species.AbstractUnityLinker.class,(s,a,t,v)->((gaml.extension.unity.species.AbstractUnityLinker) t).primLocToSend(s)),desc(PRIM,new Children(),NAME,"loc_to_send",TYPE,Ti(P),VIRTUAL,FALSE),gaml.extension.unity.species.AbstractUnityLinker.class.getMethod("primLocToSend",SC));
_action(new GamaHelper("init_server",gaml.extension.unity.species.AbstractUnityLinker.class,(s,a,t,v)->((gaml.extension.unity.species.AbstractUnityLinker) t).primInitServer(s)),desc(PRIM,new Children(),NAME,"init_server",TYPE,Ti(B),VIRTUAL,FALSE),gaml.extension.unity.species.AbstractUnityLinker.class.getMethod("primInitServer",SC));
_action(new GamaHelper("to_map",gaml.extension.unity.species.AbstractUnityLinker.class,(s,a,t,v)->((gaml.extension.unity.species.AbstractUnityLinker) t).primToMap(s)),desc(PRIM,new Children(_arg("precision",1,T),_arg("ag",11,T)),NAME,"to_map",TYPE,Ti(GM),VIRTUAL,FALSE),gaml.extension.unity.species.AbstractUnityLinker.class.getMethod("primToMap",SC));
_action(new GamaHelper("send_world",gaml.extension.unity.species.AbstractUnityLinker.class,(s,a,t,v)->{((gaml.extension.unity.species.AbstractUnityLinker) t).primSentWorld(s);return null;}),desc(PRIM,new Children(),NAME,"send_world",TYPE,Ti(void.class),VIRTUAL,FALSE),gaml.extension.unity.species.AbstractUnityLinker.class.getMethod("primSentWorld",SC));
_action(new GamaHelper("create_player",gaml.extension.unity.species.AbstractUnityLinker.class,(s,a,t,v)->{((gaml.extension.unity.species.AbstractUnityLinker) t).primInitPlayer(s);return null;}),desc(PRIM,new Children(_arg("id",4,T)),NAME,"create_player",TYPE,Ti(void.class),VIRTUAL,FALSE),gaml.extension.unity.species.AbstractUnityLinker.class.getMethod("primInitPlayer",SC));
_action(new GamaHelper("player_perception_cone",gaml.extension.unity.species.AbstractUnityPlayer.class,(s,a,t,v)->((gaml.extension.unity.species.AbstractUnityPlayer) t).primGetCone(s)),desc(PRIM,new Children(),NAME,"player_perception_cone",TYPE,Ti(IS),VIRTUAL,FALSE),gaml.extension.unity.species.AbstractUnityPlayer.class.getMethod("primGetCone",SC));
_action(new GamaHelper("create_player",gaml.extension.unity.species.VRExperiment.class,(s,a,t,v)->{((gaml.extension.unity.species.VRExperiment) t).primCreatePlayer(s);return null;}),desc(PRIM,new Children(_arg("id",4,T)),NAME,"create_player",TYPE,Ti(void.class),VIRTUAL,FALSE),gaml.extension.unity.species.VRExperiment.class.getMethod("primCreatePlayer",SC));
}public void initializeExperiment()  {
_experiment("unity",(p, i)->new gaml.extension.unity.species.VRExperiment(p, i));
}
}